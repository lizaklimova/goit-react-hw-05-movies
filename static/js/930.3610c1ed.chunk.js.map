{"version":3,"file":"static/js/930.3610c1ed.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/Slider/Slider.styled.jsx","components/Slider/Slider.jsx","pages/Home.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 60px 0;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  font-size: 25px;\n  text-align: center;\n  width: 300px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 25px;\n  width: 50px;\n  height: 25px;\n  border-radius: 10px 0px 0px 10px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  box-shadow: ${({ theme }) => theme.shadows.vote};\n\n  @media screen and (min-width: 768px) {\n    right: 0;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import defaultPoster from 'assets/images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport { Container } from 'components/App/App.styled';\nimport {\n  List,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from '../MoviesList/MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div name=\"moviesList\">\n      <Container>\n        <List>\n          {movies.map(\n            ({\n              id,\n              original_title,\n              poster_path,\n              vote_average,\n              release_date,\n            }) => (\n              <Item key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <Poster\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w1280${poster_path}`\n                        : defaultPoster\n                    }\n                    alt={original_title}\n                  />\n                  <VoteAvr\n                    style={{\n                      backgroundColor: determineReviewColor(\n                        makePercentage(vote_average)\n                      ),\n                    }}\n                  >\n                    {makePercentage(vote_average)}%\n                  </VoteAvr>\n                  <MovieTitle>{original_title}</MovieTitle>\n                  {release_date && (\n                    <MovieRelease>\n                      <CiCalendar />\n                      {release_date}\n                    </MovieRelease>\n                  )}\n                </MovieLink>\n              </Item>\n            )\n          )}\n        </List>\n      </Container>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { SlArrowRight, SlArrowLeft } from 'react-icons/sl';\nimport { FaStar } from 'react-icons/fa';\n\nexport const SliderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 500px;\n  min-height: 400px;\n\n  @media screen and (min-width: 768px) {\n    height: 600px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 750px;\n  }\n`;\n\nexport const SliderWrap = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const SliderList = styled.ul`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  transition: ${({ theme }) => `transform ${theme.transitions.eased}`};\n`;\n\nexport const SliderItem = styled.li`\n  max-width: 100%;\n  min-width: 100%;\n  height: 100%;\n`;\n\nexport const SliderItemDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 100%;\n  height: 100%;\n  background: ${({ $bg }) => `url(${$bg}) no-repeat center/cover`};\n`;\n\nconst arrowIconStyles = css`\n  position: absolute;\n  z-index: 3;\n  fill: ${({ theme }) => theme.colors.white};\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n\n  @media screen and (min-width: 1440px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nexport const LeftArrowIcon = styled(SlArrowLeft)`\n  ${arrowIconStyles}\n  left:0;\n`;\n\nexport const RightArrowIcon = styled(SlArrowRight)`\n  ${arrowIconStyles}\n  right: 0;\n`;\n\nexport const SliderInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 10px;\n  width: 70%;\n  border-top-right-radius: 30px;\n  border: ${({ theme }) => `1px solid ${theme.colors.whiteOpacity}`};\n  padding: 15px 30px;\n  background-color: ${({ theme }) => theme.colors.blackOpacity};\n  backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n  }\n`;\n\nexport const CategorySpan = styled.span`\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 30px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    width: 70px;\n    height: 40px;\n    font-size: 20px;\n  }\n`;\n\nexport const ReleaseWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n`;\n\nexport const SliderTitle = styled.h2`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    font-size: 25px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 35px;\n  }\n`;\n\nexport const SliderVoteWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const SliderIcon = styled(FaStar)`\n  fill: ${({ theme }) => theme.colors.orange};\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SliderVote = styled.p`\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const SliderWatchBtn = styled(Link)`\n  align-self: start;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  border-radius: 30px;\n  padding: 10px 20px;\n  margin-top: 15px;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: ${({ theme }) =>\n    `color ${theme.transitions.linear}, border-color ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.accentGreen};\n    border-color: ${({ theme }) => theme.colors.accentGreen};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    padding: 15px 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { IoPlay } from 'react-icons/io5';\nimport {\n  SliderContainer,\n  SliderWrap,\n  SliderList,\n  SliderItem,\n  SliderItemDiv,\n  LeftArrowIcon,\n  RightArrowIcon,\n  SliderInfo,\n  CategorySpan,\n  SliderTitle,\n  ReleaseWrap,\n  SliderVoteWrap,\n  SliderIcon,\n  SliderVote,\n  SliderWatchBtn,\n} from './Slider.styled';\n\nconst Slider = ({ trendings }) => {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {}, []);\n\n  const handleLeftClick = () => {\n    setOffset(prev => {\n      const newOffset = prev + 100;\n\n      return Math.min(newOffset, 0);\n    });\n  };\n\n  const handleRightClick = () => {\n    setOffset(prev => {\n      const newOffset = prev - 100;\n      const maxOffset = -(100 * 19);\n\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <SliderContainer>\n      <LeftArrowIcon\n        onClick={handleLeftClick}\n        style={{ cursor: offset === 0 ? 'not-allowed' : 'pointer' }}\n      />\n      <SliderWrap>\n        <SliderList style={{ transform: `translateX(${offset}%)` }}>\n          {trendings.map(\n            ({ id, title, vote_average, backdrop_path, release_date }) => (\n              <SliderItem key={id}>\n                <SliderItemDiv\n                  $bg={`https://image.tmdb.org/t/p/w1280${backdrop_path}`}\n                >\n                  <SliderInfo>\n                    <ReleaseWrap>\n                      <CategorySpan> {release_date.slice(0, 4)}</CategorySpan>\n                    </ReleaseWrap>\n\n                    <SliderTitle>{title}</SliderTitle>\n\n                    <SliderVoteWrap>\n                      <SliderIcon />\n                      <SliderVote>{vote_average.toFixed(2)}</SliderVote>\n                    </SliderVoteWrap>\n                    <SliderWatchBtn to={`/movies/${id}`}>\n                      <IoPlay />\n                      Watch\n                    </SliderWatchBtn>\n                  </SliderInfo>\n                </SliderItemDiv>\n              </SliderItem>\n            )\n          )}\n        </SliderList>\n      </SliderWrap>\n\n      <RightArrowIcon\n        onClick={handleRightClick}\n        style={{ cursor: offset === -1900 ? 'not-allowed' : 'pointer' }}\n      />\n    </SliderContainer>\n  );\n};\n\nexport default Slider;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'service/movies-api';\nimport Loader from 'components/Loader';\nimport Slider from 'components/Slider';\nimport MoviesList from 'components/MoviesList';\nimport notification from 'helpers/notification';\nimport ScrollUpBtn from 'components/ScrollUpBtn';\nimport { Container } from 'components/App/App.styled';\nimport { MainTitleWrap, TitleIcon, MainTitle } from 'components/App/App.styled';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetchTrendings = async () => {\n      try {\n        const response = await getTrending();\n\n        setTrendings(response);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchTrendings();\n  }, []);\n\n  return (\n    <>\n      {loader && <Loader />}\n      {trendings.length > 0 && <Slider trendings={trendings} />}\n      <Container>\n        <MainTitleWrap>\n          <TitleIcon />\n          <MainTitle>Top-20 trending movies</MainTitle>\n        </MainTitleWrap>\n      </Container>\n      {trendings.length > 0 && <MoviesList movies={trendings} />}\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","theme","concat","transitions","linear","Poster","_templateObject3","MovieLink","Link","_templateObject4","MovieTitle","_templateObject5","_ref2","colors","white","VoteAvr","_templateObject6","_ref3","_ref4","_ref5","accentGreen","_ref6","shadows","vote","MovieRelease","_templateObject7","_ref7","movies","location","_jsx","name","children","Container","map","id","original_title","poster_path","vote_average","release_date","_jsxs","to","state","from","src","defaultPoster","alt","style","backgroundColor","determineReviewColor","makePercentage","CiCalendar","ScrollUpButton","greenBackdrop","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","IoIosArrowUp","size","fill","percentage","color","num","Math","ceil","Number","SliderContainer","SliderWrap","SliderList","eased","SliderItem","SliderItemDiv","$bg","arrowIconStyles","css","LeftArrowIcon","SlArrowLeft","RightArrowIcon","SlArrowRight","_templateObject8","SliderInfo","_templateObject9","whiteOpacity","blackOpacity","CategorySpan","_templateObject10","ReleaseWrap","_templateObject11","SliderTitle","_templateObject12","_ref8","SliderVoteWrap","_templateObject13","SliderIcon","FaStar","_templateObject14","_ref9","orange","SliderVote","_templateObject15","_ref10","SliderWatchBtn","_templateObject16","_ref11","_ref12","_ref13","_ref14","_ref15","trendings","offset","setOffset","prev","newOffset","min","cursor","transform","title","backdrop_path","slice","toFixed","IoPlay","max","setTrendings","_useState3","_useState4","loader","setLoader","fetchTrendings","_asyncToGenerator","_regeneratorRuntime","_callee","response","message","_context","next","getTrending","sent","t0","notification","finish","stop","apply","arguments","_Fragment","Loader","length","Slider","MainTitleWrap","TitleIcon","MainTitle","MoviesList","ScrollUpBtn"],"sourceRoot":""}