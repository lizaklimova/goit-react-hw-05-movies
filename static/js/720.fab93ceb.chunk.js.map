{"version":3,"file":"static/js/720.fab93ceb.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","components/PaginationList/PaginationList.jsx","pages/Movies.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 60px 0;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  font-size: 25px;\n  text-align: center;\n  width: 300px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 25px;\n  width: 50px;\n  height: 25px;\n  border-radius: 10px 0px 0px 10px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  box-shadow: ${({ theme }) => theme.shadows.vote};\n\n  @media screen and (min-width: 768px) {\n    right: 0;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import defaultPoster from 'assets/images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport { Container } from 'components/App/App.styled';\nimport {\n  List,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from '../MoviesList/MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div name=\"moviesList\">\n      <Container>\n        <List>\n          {movies.map(\n            ({\n              id,\n              original_title,\n              poster_path,\n              vote_average,\n              release_date,\n            }) => (\n              <Item key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <Poster\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w1280${poster_path}`\n                        : defaultPoster\n                    }\n                    alt={original_title}\n                  />\n                  <VoteAvr\n                    style={{\n                      backgroundColor: determineReviewColor(\n                        makePercentage(vote_average)\n                      ),\n                    }}\n                  >\n                    {makePercentage(vote_average)}%\n                  </VoteAvr>\n                  <MovieTitle>{original_title}</MovieTitle>\n                  {release_date && (\n                    <MovieRelease>\n                      <CiCalendar />\n                      {release_date}\n                    </MovieRelease>\n                  )}\n                </MovieLink>\n              </Item>\n            )\n          )}\n        </List>\n      </Container>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 60px;\n`;\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n\n  & :is(input:focus, input:valid) ~ label {\n    color: ${({ theme }) => theme.colors.accentGreen};\n    transform: translateY(-20px);\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 10px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.colors.white};\n  border: ${({ theme }) => `2px solid ${theme.colors.white}`};\n  background-color: transparent;\n\n  &:-webkit-autofill {\n    box-shadow: 0 0 0 1000px black inset;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 250px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const SearchInputLabel = styled.label`\n  position: absolute;\n  top: 25%;\n  left: 5%;\n  background-color: ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.grey};\n  width: 105px;\n  text-align: center;\n  transition: ${({ theme }) => `all ${theme.transitions.linear}`};\n  cursor: text;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  cursor: pointer;\n  transition: ${({ theme }) => `opacity ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { IoSearchOutline } from 'react-icons/io5';\nimport { Container } from 'components/App/App.styled';\nimport {\n  SearchForm,\n  SearchInputWrapper,\n  SearchInput,\n  SearchInputLabel,\n  SearchBtn,\n} from './SearchMovies.styled';\nconst SearchMovies = ({ search }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n\n    search(e.target.search.value);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSearch}>\n        <SearchInputWrapper>\n          <SearchInput\n            id=\"search-input\"\n            type=\"text\"\n            name=\"search\"\n            required\n            autoComplete=\"off\"\n          />\n          <SearchInputLabel htmlFor=\"input\">Search movie</SearchInputLabel>\n        </SearchInputWrapper>\n        <SearchBtn type=\"submit\">\n          <IoSearchOutline stroke=\"#fff\" size={25} />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchMovies;\n","import { Pagination } from '@mui/material';\nimport { Container } from 'components/App/App.styled';\n\nconst PaginationList = ({ pageQty, pg, onChange }) => {\n  const handlePaginationChange = (_, num) => {\n    onChange(num);\n  };\n\n  return (\n    <Container>\n      <Pagination\n        count={pageQty}\n        page={pg}\n        onChange={handlePaginationChange}\n        color={'success'}\n        sx={{\n          color: '#fff',\n          stroke: '#fff',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px',\n\n          '& .MuiPaginationItem-root': {\n            color: '#fff',\n          },\n          '& .MuiPaginationItem-page': {\n            '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n              {\n                color: '#1cb114',\n              },\n          },\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default PaginationList;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'service/movies-api';\nimport smoothScroll from 'helpers/smoothScroll';\nimport notification from 'helpers/notification';\nimport Loader from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\nimport SearchMovies from 'components/SearchMovies';\nimport PaginationList from 'components/PaginationList';\nimport ScrollUpBtn from 'components/ScrollUpBtn';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoader(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await getMoviesBySearch(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n        smoothScroll('moviesList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <SearchMovies search={handleSearch} />\n\n      {pageQty > 1 && (\n        <PaginationList pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","theme","concat","transitions","linear","Poster","_templateObject3","MovieLink","Link","_templateObject4","MovieTitle","_templateObject5","_ref2","colors","white","VoteAvr","_templateObject6","_ref3","_ref4","_ref5","accentGreen","_ref6","shadows","vote","MovieRelease","_templateObject7","_ref7","movies","location","_jsx","name","children","Container","map","id","original_title","poster_path","vote_average","release_date","_jsxs","to","state","from","src","defaultPoster","alt","style","backgroundColor","determineReviewColor","makePercentage","CiCalendar","ScrollUpButton","greenBackdrop","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","IoIosArrowUp","size","fill","percentage","color","num","Math","ceil","Number","SearchForm","SearchInputWrapper","SearchInput","SearchInputLabel","black","grey","SearchBtn","_ref8","search","onSubmit","e","preventDefault","target","value","currentTarget","reset","type","required","autoComplete","htmlFor","IoSearchOutline","stroke","pageQty","pg","onChange","Pagination","count","page","_","sx","justifyContent","marginTop","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useLocation","setMovies","_useState3","_useState4","loader","setLoader","_useState5","_useState6","setPg","_useState7","_useState8","setPageQty","queryForSearch","get","fetchMoviesBySearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesBySea","results","total_pages","message","_context","prev","next","getMoviesBySearch","sent","query","length","abrupt","notification","t0","smoothScroll","finish","stop","apply","arguments","_Fragment","Loader","SearchMovies","PaginationList","MoviesList","ScrollUpBtn"],"sourceRoot":""}