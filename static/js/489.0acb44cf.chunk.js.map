{"version":3,"file":"static/js/489.0acb44cf.chunk.js","mappings":"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","sources":["components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  background-color: #0dcb2d70;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { FaArrowUpLong } from 'react-icons/fa6';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\nimport { useEffect, useState } from 'react';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <FaArrowUpLong size={45} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  padding: 60px 0;\n`;\nexport const InfoSectionWrapper = styled.div`\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(4, 4, 4, 0.4), rgba(4, 4, 4, 0.4))\n        no-repeat center/cover,\n      url(${props => props.$backdropSrc}) no-repeat center/cover;\n    filter: blur(15px);\n    z-index: -1;\n  }\n`;\nexport const Info = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  @media screen and (max-width: 458px) {\n    flex-direction: column;\n  }\n  @media screen and (min-width: 428px) {\n    flex-direction: row;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 50px;\n  }\n`;\nexport const MovieInfoPoster = styled.img`\n  border-radius: 20px;\n  width: 200px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\nexport const MovieDescription = styled.div`\n  padding: 10px;\n  background-color: #d2d5d378;\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 200px;\n  min-height: 315px;\n  @media screen and (min-width: 768px) {\n    min-width: 300px;\n  }\n  @media screen and (min-width: 1440px) {\n    min-width: 500px;\n  }\n`;\nexport const MovieInfoTitle = styled.h3`\n  font-size: 25px;\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n  }\n`;\nexport const ScoreText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\nexport const MovieInfoScore = styled.span`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.color};\n`;\n\nexport const SubTitle = styled.h4`\n  font-size: 20px;\n  font-style: italic;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nexport const Line = styled.hr`\n  width: 100%;\n\n  border-color: #000;\n`;\n","import defaultPoster from '../../images/default_poster.jpeg';\nimport {\n  MovieInfoContainer,\n  InfoSectionWrapper,\n  Info,\n  MovieInfoPoster,\n  MovieDescription,\n  MovieInfoTitle,\n  Line,\n  ScoreText,\n  MovieInfoScore,\n  SubTitle,\n  GenresList,\n} from './MovieInfo.styled';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\n\nconst MovieInfo = ({\n  movie: {\n    backdrop_path,\n    original_title,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  },\n}) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const posterSrc = poster_path ? posterUrl : defaultPoster;\n\n  const backdropUrl = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n  const backdropSrc = backdrop_path ? backdropUrl : defaultPoster;\n\n  return (\n    <MovieInfoContainer>\n      <InfoSectionWrapper $backdropSrc={backdropSrc}>\n        <Info>\n          <MovieInfoPoster src={posterSrc} alt=\"original_title\" />\n          <MovieDescription>\n            <MovieInfoTitle>{original_title}</MovieInfoTitle>\n            <Line />\n            <ScoreText>\n              User score:\n              <MovieInfoScore\n                color={determineReviewColor(makePercentage(vote_average))}\n              >\n                {makePercentage(vote_average)}%\n              </MovieInfoScore>\n            </ScoreText>\n\n            <SubTitle>Overview</SubTitle>\n            <p>{overview}</p>\n\n            {genres.length > 0 && (\n              <>\n                <SubTitle>Genres</SubTitle>\n                <GenresList>\n                  {genres.map(genre => (\n                    <p key={genre.id}>{genre.name}</p>\n                  ))}\n                </GenresList>\n              </>\n            )}\n          </MovieDescription>\n        </Info>\n      </InfoSectionWrapper>\n    </MovieInfoContainer>\n  );\n};\n\nexport default MovieInfo;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  color: #fff;\n  border: 2px solid #fff;\n  border-radius: 20px;\n  width: 100px;\n  padding: 5px;\n  margin-top: 30px;\n  transition: color 350ms linear, border-color 350ms linear;\n  &:hover,\n  &:focus {\n    color: #1cb114;\n    border-color: #1cb114;\n  }\n`;\n","import { FaArrowLeftLong } from 'react-icons/fa6';\nimport { Container } from 'components/App/App.styled';\nimport { GoBackLink } from './GoBackBtn.styled';\n\nconst GoBackBtn = ({ path }) => {\n  return (\n    <Container>\n      <GoBackLink to={path}>\n        <FaArrowLeftLong />\n        Go back\n      </GoBackLink>\n    </Container>\n  );\n};\n\nexport default GoBackBtn;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'service/movies-api';\nimport Loader from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport GoBackBtn from 'components/GoBackBtn/GoBackBtn';\nimport notification from 'helpers/notification';\nimport { Container, AdLinksWrap, AdLink } from 'components/App/App.styled';\nimport ScrollUpBtn from 'components/ScrollUpBtn/ScrollUpBtn';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n\n    const fetchMovieById = async () => {\n      try {\n        const movie = await getMovieById(movieId);\n\n        setMovieInfo(movie);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  const goBackPath = location?.state?.from ?? '/';\n\n  return (\n    <Container>\n      {loader && <Loader />}\n      <GoBackBtn path={goBackPath} />\n      {movieInfo && <MovieInfo movie={movieInfo} />}\n      <AdLinksWrap>\n        <AdLink to=\"cast\">Cast</AdLink>\n        <AdLink to=\"reviews\">Reviews</AdLink>\n      </AdLinksWrap>\n      <ScrollUpBtn />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ScrollUpButton","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","_jsx","onClick","scrollTo","top","behavior","style","display","children","FaArrowUpLong","size","fill","percentage","color","num","Math","ceil","Number","MovieInfoContainer","InfoSectionWrapper","_templateObject2","props","$backdropSrc","Info","_templateObject3","MovieInfoPoster","_templateObject4","MovieDescription","_templateObject5","MovieInfoTitle","_templateObject6","ScoreText","_templateObject7","MovieInfoScore","_templateObject8","SubTitle","_templateObject9","GenresList","_templateObject10","Line","_templateObject11","_ref","_ref$movie","movie","backdrop_path","original_title","poster_path","vote_average","overview","genres","posterUrl","concat","posterSrc","defaultPoster","backdropUrl","backdropSrc","_jsxs","src","alt","determineReviewColor","makePercentage","length","_Fragment","map","genre","name","id","GoBackLink","Link","path","Container","to","FaArrowLeftLong","_location$state$from","_location$state","movieId","useParams","location","useLocation","movieInfo","setMovieInfo","_useState3","_useState4","loader","setLoader","fetchMovieById","_asyncToGenerator","_regeneratorRuntime","_callee","message","_context","prev","next","getMovieById","sent","t0","notification","finish","stop","apply","arguments","goBackPath","state","from","Loader","GoBackBtn","MovieInfo","AdLinksWrap","AdLink","ScrollUpBtn","Suspense","fallback","Outlet"],"sourceRoot":""}