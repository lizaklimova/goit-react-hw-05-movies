{"version":3,"file":"static/js/220.49cd49fb.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MovieItem/MovieItem.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","components/Skeleton/MoviesListSkeleton.styled.jsx","components/Skeleton/MoviesListSkeleton.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/Slider/Slider.styled.jsx","components/Slider/Slider.jsx","components/Skeleton/SliderSkeleton.styled.jsx","components/Skeleton/SliderSkeleton.jsx","pages/Home.jsx"],"sourcesContent":["import defaultPoster from 'assets/images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport {\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from './MovieItem.styled';\n\nconst MovieItem = ({\n  movie: { id, original_title, poster_path, vote_average, release_date },\n  location,\n}) => {\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w1280${poster_path}`\n              : defaultPoster\n          }\n          alt={original_title}\n        />\n        <VoteAvr\n          style={{\n            backgroundColor: determineReviewColor(makePercentage(vote_average)),\n          }}\n        >\n          {makePercentage(vote_average)}%\n        </VoteAvr>\n        <MovieTitle>{original_title}</MovieTitle>\n        {release_date && (\n          <MovieRelease>\n            <CiCalendar />\n            {release_date}\n          </MovieRelease>\n        )}\n      </MovieLink>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  position: relative;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  font-size: 25px;\n  text-align: center;\n  width: 300px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 25px;\n  width: 50px;\n  height: 25px;\n  border-radius: 10px 0px 0px 10px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  box-shadow: ${({ theme }) => theme.shadows.vote};\n\n  @media screen and (min-width: 768px) {\n    right: 0;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","import styled from 'styled-components';\nimport ContentLoader from 'react-content-loader';\n\nexport const MoviesContentLoader = styled(ContentLoader)`\n  width: 250px;\n  height: 491px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 476px;\n\n    rect.poster {\n      height: 300px;\n    }\n  }\n`;\n","import { Item } from 'components/MovieItem/MovieItem.styled';\nimport { MoviesContentLoader } from './MoviesListSkeleton.styled';\n\nconst Skeleton = () => {\n  return (\n    <Item>\n      <MoviesContentLoader\n        speed={2}\n        backgroundColor=\"#8f8f8f\"\n        foregroundColor=\"#ebeaea\"\n      >\n        {window.innerWidth >= 768 ? (\n          <>\n            <rect x=\"30\" y=\"380\" rx=\"0\" ry=\"0\" width=\"150\" height=\"26\" />\n            <rect\n              x=\"4\"\n              y=\"4\"\n              rx=\"0\"\n              ry=\"0\"\n              width=\"200\"\n              height=\"300\"\n              className=\"poster\"\n            />\n            <rect x=\"0\" y=\"330\" rx=\"0\" ry=\"0\" width=\"250\" height=\"29\" />\n          </>\n        ) : (\n          <>\n            <rect x=\"50\" y=\"380\" rx=\"0\" ry=\"0\" width=\"150\" height=\"26\" />\n            <rect\n              x=\"4\"\n              y=\"4\"\n              rx=\"0\"\n              ry=\"0\"\n              width=\"250\"\n              height=\"350\"\n              className=\"poster\"\n            />\n            <rect x=\"0\" y=\"430\" rx=\"0\" ry=\"0\" width=\"250\" height=\"29\" />\n          </>\n        )}\n      </MoviesContentLoader>\n    </Item>\n  );\n};\n\nexport default Skeleton;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { SlArrowRight, SlArrowLeft } from 'react-icons/sl';\nimport { FaStar } from 'react-icons/fa';\n\nexport const SliderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 500px;\n  min-height: 400px;\n\n  @media screen and (min-width: 768px) {\n    height: 600px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 750px;\n  }\n`;\n\nexport const SliderWrap = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n\nexport const SliderList = styled.ul`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  transition: ${({ theme }) => `transform ${theme.transitions.eased}`};\n`;\n\nexport const SliderItem = styled.li`\n  max-width: 100%;\n  min-width: 100%;\n  height: 100%;\n`;\n\nexport const SliderItemDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 100%;\n  height: 100%;\n  background: ${({ $bg }) => `url(${$bg}) no-repeat center/cover`};\n`;\n\nconst arrowIconStyles = css`\n  position: absolute;\n  z-index: 3;\n  fill: ${({ theme }) => theme.colors.white};\n  width: 50px;\n  height: 50px;\n  cursor: pointer;\n\n  @media screen and (min-width: 1440px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nexport const LeftArrowIcon = styled(SlArrowLeft)`\n  ${arrowIconStyles}\n  left:0;\n`;\n\nexport const RightArrowIcon = styled(SlArrowRight)`\n  ${arrowIconStyles}\n  right: 0;\n`;\n\nexport const SliderInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  gap: 10px;\n  width: 70%;\n  border-top-right-radius: 30px;\n  border: ${({ theme }) => `1px solid ${theme.colors.whiteOpacity}`};\n  padding: 15px 30px;\n  background-color: ${({ theme }) => theme.colors.blackOpacity};\n  backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n  }\n`;\n\nexport const CategorySpan = styled.span`\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 60px;\n  height: 30px;\n  border-radius: 30px;\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    width: 70px;\n    height: 40px;\n    font-size: 20px;\n  }\n`;\n\nexport const ReleaseWrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n`;\n\nexport const SliderTitle = styled.h2`\n  font-size: 20px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    font-size: 25px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 35px;\n  }\n`;\n\nexport const SliderVoteWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const SliderIcon = styled(FaStar)`\n  fill: ${({ theme }) => theme.colors.orange};\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SliderVote = styled.p`\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const SliderWatchBtn = styled(Link)`\n  align-self: start;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 3px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  border-radius: 30px;\n  padding: 10px 20px;\n  margin-top: 15px;\n  background-color: transparent;\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: ${({ theme }) =>\n    `color ${theme.transitions.linear}, border-color ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.accentGreen};\n    border-color: ${({ theme }) => theme.colors.accentGreen};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    padding: 15px 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { IoPlay } from 'react-icons/io5';\nimport {\n  SliderContainer,\n  SliderWrap,\n  SliderList,\n  SliderItem,\n  SliderItemDiv,\n  LeftArrowIcon,\n  RightArrowIcon,\n  SliderInfo,\n  CategorySpan,\n  SliderTitle,\n  ReleaseWrap,\n  SliderVoteWrap,\n  SliderIcon,\n  SliderVote,\n  SliderWatchBtn,\n} from './Slider.styled';\n\nconst Slider = ({ trendings }) => {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {}, []);\n\n  const handleLeftClick = () => {\n    setOffset(prev => {\n      const newOffset = prev + 100;\n\n      return Math.min(newOffset, 0);\n    });\n  };\n\n  const handleRightClick = () => {\n    setOffset(prev => {\n      const newOffset = prev - 100;\n      const maxOffset = -(100 * 19);\n\n      return Math.max(newOffset, maxOffset);\n    });\n  };\n\n  return (\n    <SliderContainer>\n      <LeftArrowIcon\n        onClick={handleLeftClick}\n        style={{ cursor: offset === 0 ? 'not-allowed' : 'pointer' }}\n      />\n      <SliderWrap>\n        <SliderList style={{ transform: `translateX(${offset}%)` }}>\n          {trendings.map(\n            ({ id, title, vote_average, backdrop_path, release_date }) => (\n              <SliderItem key={id}>\n                <SliderItemDiv\n                  $bg={`https://image.tmdb.org/t/p/w1280${backdrop_path}`}\n                >\n                  <SliderInfo>\n                    <ReleaseWrap>\n                      <CategorySpan> {release_date.slice(0, 4)}</CategorySpan>\n                    </ReleaseWrap>\n\n                    <SliderTitle>{title}</SliderTitle>\n\n                    <SliderVoteWrap>\n                      <SliderIcon />\n                      <SliderVote>{vote_average.toFixed(2)}</SliderVote>\n                    </SliderVoteWrap>\n                    <SliderWatchBtn to={`/movies/${id}`}>\n                      <IoPlay />\n                      Watch\n                    </SliderWatchBtn>\n                  </SliderInfo>\n                </SliderItemDiv>\n              </SliderItem>\n            )\n          )}\n        </SliderList>\n      </SliderWrap>\n\n      <RightArrowIcon\n        onClick={handleRightClick}\n        style={{ cursor: offset === -1900 ? 'not-allowed' : 'pointer' }}\n      />\n    </SliderContainer>\n  );\n};\n\nexport default Slider;\n","import styled from 'styled-components';\nimport ContentLoader from 'react-content-loader';\n\nexport const FullWidthContentLoader = styled(ContentLoader)`\n  width: 100vw;\n  height: 500px;\n  min-height: 400px;\n\n  rect {\n    width: 100vw;\n    height: 500px;\n    min-height: 400px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 600px;\n\n    rect {\n      height: 600px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 750px;\n\n    rect {\n      height: 750px;\n    }\n  }\n`;\n","import { FullWidthContentLoader } from './SliderSkeleton.styled';\n\nconst SliderSkeleton = () => {\n  return (\n    <FullWidthContentLoader\n      speed={2}\n      height={500}\n      backgroundColor=\"#8f8f8f\"\n      foregroundColor=\"#ebeaea\"\n    >\n      <rect x=\"4\" y=\"4\" rx=\"0\" ry=\"0\" height=\"500\" />\n    </FullWidthContentLoader>\n  );\n};\n\nexport default SliderSkeleton;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'service/movies-api';\nimport Loader from 'components/Loader';\nimport Slider from 'components/Slider';\nimport notification from 'helpers/notification';\nimport ScrollUpBtn from 'components/ScrollUpBtn';\nimport { Container } from 'components/App/App.styled';\nimport { MainTitleWrap, TitleIcon, MainTitle } from 'components/App/App.styled';\nimport { List } from 'components/App/App.styled';\nimport Skeleton from 'components/Skeleton/MoviesListSkeleton';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport SliderSkeleton from 'components/Skeleton/SliderSkeleton';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetchTrendings = async () => {\n      try {\n        const response = await getTrending();\n\n        setTrendings(response);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchTrendings();\n  }, []);\n\n  return (\n    <>\n      {loader && <Loader />}\n\n      {loader ? <SliderSkeleton /> : <Slider trendings={trendings} />}\n\n      <Container>\n        <MainTitleWrap>\n          <TitleIcon />\n          <MainTitle>Top-20 trending movies</MainTitle>\n        </MainTitleWrap>\n\n        <div name=\"moviesList\">\n          <Container>\n            <List>\n              {loader\n                ? [...new Array(20)].map((_, i) => <Skeleton key={i} />)\n                : trendings.map(movie => (\n                    <MovieItem key={movie.id} movie={movie} />\n                  ))}\n            </List>\n          </Container>\n        </div>\n      </Container>\n\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","_ref$movie","movie","id","original_title","poster_path","vote_average","release_date","location","_jsx","Item","children","_jsxs","MovieLink","to","concat","state","from","Poster","src","defaultPoster","alt","VoteAvr","style","backgroundColor","determineReviewColor","makePercentage","MovieTitle","MovieRelease","CiCalendar","styled","_templateObject","_taggedTemplateLiteral","theme","transitions","linear","_templateObject2","Link","_templateObject3","_templateObject4","_ref2","colors","white","_templateObject5","_ref3","_ref4","_ref5","accentGreen","_ref6","shadows","vote","_templateObject6","_ref7","ScrollUpButton","greenBackdrop","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","IoIosArrowUp","size","fill","MoviesContentLoader","ContentLoader","speed","foregroundColor","innerWidth","_Fragment","x","y","rx","ry","width","height","className","percentage","color","num","Math","ceil","Number","SliderContainer","SliderWrap","SliderList","eased","SliderItem","SliderItemDiv","$bg","arrowIconStyles","css","LeftArrowIcon","SlArrowLeft","_templateObject7","RightArrowIcon","SlArrowRight","_templateObject8","SliderInfo","_templateObject9","whiteOpacity","blackOpacity","CategorySpan","_templateObject10","ReleaseWrap","_templateObject11","SliderTitle","_templateObject12","_ref8","SliderVoteWrap","_templateObject13","SliderIcon","FaStar","_templateObject14","_ref9","orange","SliderVote","_templateObject15","_ref10","SliderWatchBtn","_templateObject16","_ref11","_ref12","_ref13","_ref14","_ref15","trendings","offset","setOffset","prev","newOffset","min","cursor","transform","map","title","backdrop_path","slice","toFixed","IoPlay","max","FullWidthContentLoader","setTrendings","_useState3","_useState4","loader","setLoader","fetchTrendings","_asyncToGenerator","_regeneratorRuntime","_callee","response","message","_context","next","getTrending","sent","t0","notification","finish","stop","apply","arguments","Loader","SliderSkeleton","Slider","Container","MainTitleWrap","TitleIcon","MainTitle","name","List","_toConsumableArray","Array","_","i","Skeleton","MovieItem","ScrollUpBtn"],"sourceRoot":""}