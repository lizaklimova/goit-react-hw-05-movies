{"version":3,"file":"static/js/85.51e04bdf.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MovieItem/MovieItem.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","components/Skeleton/MoviesListSkeleton.styled.jsx","components/Skeleton/MoviesListSkeleton.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","components/PaginationList/PaginationList.jsx","pages/Movies.jsx"],"sourcesContent":["import defaultPoster from 'assets/images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport {\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from './MovieItem.styled';\n\nconst MovieItem = ({\n  movie: { id, original_title, poster_path, vote_average, release_date },\n  location,\n}) => {\n  return (\n    <Item>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <Poster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w1280${poster_path}`\n              : defaultPoster\n          }\n          alt={original_title}\n        />\n        <VoteAvr\n          style={{\n            backgroundColor: determineReviewColor(makePercentage(vote_average)),\n          }}\n        >\n          {makePercentage(vote_average)}%\n        </VoteAvr>\n        <MovieTitle>{original_title}</MovieTitle>\n        {release_date && (\n          <MovieRelease>\n            <CiCalendar />\n            {release_date}\n          </MovieRelease>\n        )}\n      </MovieLink>\n    </Item>\n  );\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  position: relative;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  font-size: 25px;\n  text-align: center;\n  width: 300px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  right: 25px;\n  width: 50px;\n  height: 25px;\n  border-radius: 10px 0px 0px 10px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  box-shadow: ${({ theme }) => theme.shadows.vote};\n\n  @media screen and (min-width: 768px) {\n    right: 0;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","import styled from 'styled-components';\nimport ContentLoader from 'react-content-loader';\n\nexport const MoviesContentLoader = styled(ContentLoader)`\n  width: 250px;\n  height: 491px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 476px;\n\n    rect.poster {\n      height: 300px;\n    }\n  }\n`;\n","import { Item } from 'components/MovieItem/MovieItem.styled';\nimport { MoviesContentLoader } from './MoviesListSkeleton.styled';\n\nconst Skeleton = () => {\n  return (\n    <Item>\n      <MoviesContentLoader\n        speed={2}\n        backgroundColor=\"#8f8f8f\"\n        foregroundColor=\"#ebeaea\"\n      >\n        {window.innerWidth >= 768 ? (\n          <>\n            <rect x=\"30\" y=\"380\" rx=\"0\" ry=\"0\" width=\"150\" height=\"26\" />\n            <rect\n              x=\"4\"\n              y=\"4\"\n              rx=\"0\"\n              ry=\"0\"\n              width=\"200\"\n              height=\"300\"\n              className=\"poster\"\n            />\n            <rect x=\"0\" y=\"330\" rx=\"0\" ry=\"0\" width=\"250\" height=\"29\" />\n          </>\n        ) : (\n          <>\n            <rect x=\"50\" y=\"380\" rx=\"0\" ry=\"0\" width=\"150\" height=\"26\" />\n            <rect\n              x=\"4\"\n              y=\"4\"\n              rx=\"0\"\n              ry=\"0\"\n              width=\"250\"\n              height=\"350\"\n              className=\"poster\"\n            />\n            <rect x=\"0\" y=\"430\" rx=\"0\" ry=\"0\" width=\"250\" height=\"29\" />\n          </>\n        )}\n      </MoviesContentLoader>\n    </Item>\n  );\n};\n\nexport default Skeleton;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 60px;\n`;\n\nexport const SearchInputWrapper = styled.div`\n  position: relative;\n\n  & :is(input:focus, input:valid) ~ label {\n    color: ${({ theme }) => theme.colors.accentGreen};\n    transform: translateY(-20px);\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 10px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.colors.white};\n  border: ${({ theme }) => `2px solid ${theme.colors.white}`};\n  background-color: transparent;\n\n  &:-webkit-autofill {\n    box-shadow: 0 0 0 1000px black inset;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 250px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const SearchInputLabel = styled.label`\n  position: absolute;\n  top: 25%;\n  left: 5%;\n  background-color: ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.grey};\n  width: 105px;\n  text-align: center;\n  transition: ${({ theme }) => `all ${theme.transitions.linear}`};\n  cursor: text;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  cursor: pointer;\n  transition: ${({ theme }) => `opacity ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { IoSearchOutline } from 'react-icons/io5';\nimport { Container } from 'components/App/App.styled';\nimport {\n  SearchForm,\n  SearchInputWrapper,\n  SearchInput,\n  SearchInputLabel,\n  SearchBtn,\n} from './SearchMovies.styled';\nconst SearchMovies = ({ search }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n\n    search(e.target.search.value);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSearch}>\n        <SearchInputWrapper>\n          <SearchInput\n            id=\"search-input\"\n            type=\"text\"\n            name=\"search\"\n            required\n            autoComplete=\"off\"\n          />\n          <SearchInputLabel htmlFor=\"input\">Search movie</SearchInputLabel>\n        </SearchInputWrapper>\n        <SearchBtn type=\"submit\">\n          <IoSearchOutline stroke=\"#fff\" size={25} />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchMovies;\n","import { Pagination } from '@mui/material';\nimport { Container } from 'components/App/App.styled';\n\nconst PaginationList = ({ pageQty, pg, onChange }) => {\n  const handlePaginationChange = (_, num) => {\n    onChange(num);\n  };\n\n  return (\n    <Container>\n      <Pagination\n        count={pageQty}\n        page={pg}\n        onChange={handlePaginationChange}\n        color={'success'}\n        sx={{\n          color: '#fff',\n          stroke: '#fff',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px',\n\n          '& .MuiPaginationItem-root': {\n            color: '#fff',\n          },\n          '& .MuiPaginationItem-page': {\n            '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n              {\n                color: '#1cb114',\n              },\n          },\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default PaginationList;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'service/movies-api';\nimport smoothScroll from 'helpers/smoothScroll';\nimport notification from 'helpers/notification';\nimport Loader from 'components/Loader';\nimport SearchMovies from 'components/SearchMovies';\nimport PaginationList from 'components/PaginationList';\nimport ScrollUpBtn from 'components/ScrollUpBtn';\nimport Skeleton from 'components/Skeleton/MoviesListSkeleton';\nimport MovieItem from 'components/MovieItem';\nimport { Container } from 'components/App/App.styled';\nimport { List } from 'components/App/App.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoader(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await getMoviesBySearch(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n        smoothScroll('moviesList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <SearchMovies search={handleSearch} />\n\n      {pageQty > 1 && (\n        <PaginationList pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      <Container>\n        <div name=\"moviesList\">\n          <List>\n            {loader\n              ? [...new Array(20)].map((_, i) => <Skeleton key={i} />)\n              : movies.map(movie => (\n                  <MovieItem key={movie.id} movie={movie} location={location} />\n                ))}\n          </List>\n        </div>\n      </Container>\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","_ref$movie","movie","id","original_title","poster_path","vote_average","release_date","location","_jsx","Item","children","_jsxs","MovieLink","to","concat","state","from","Poster","src","defaultPoster","alt","VoteAvr","style","backgroundColor","determineReviewColor","makePercentage","MovieTitle","MovieRelease","CiCalendar","styled","_templateObject","_taggedTemplateLiteral","theme","transitions","linear","_templateObject2","Link","_templateObject3","_templateObject4","_ref2","colors","white","_templateObject5","_ref3","_ref4","_ref5","accentGreen","_ref6","shadows","vote","_templateObject6","_ref7","ScrollUpButton","greenBackdrop","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","IoIosArrowUp","size","fill","MoviesContentLoader","ContentLoader","speed","foregroundColor","innerWidth","_Fragment","x","y","rx","ry","width","height","className","percentage","color","num","Math","ceil","Number","SearchForm","SearchInputWrapper","SearchInput","SearchInputLabel","black","grey","SearchBtn","_ref8","search","Container","onSubmit","e","preventDefault","target","value","currentTarget","reset","type","name","required","autoComplete","htmlFor","IoSearchOutline","stroke","pageQty","pg","onChange","Pagination","count","page","_","sx","justifyContent","marginTop","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useLocation","movies","setMovies","_useState3","_useState4","loader","setLoader","_useState5","_useState6","setPg","_useState7","_useState8","setPageQty","queryForSearch","get","fetchMoviesBySearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesBySea","results","total_pages","message","_context","prev","next","getMoviesBySearch","sent","query","length","abrupt","notification","t0","smoothScroll","finish","stop","apply","arguments","Loader","SearchMovies","PaginationList","List","_toConsumableArray","Array","map","i","Skeleton","MovieItem","ScrollUpBtn"],"sourceRoot":""}