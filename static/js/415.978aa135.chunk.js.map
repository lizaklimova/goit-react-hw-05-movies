{"version":3,"file":"static/js/415.978aa135.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","pages/Home.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n  padding: 60px 0;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const MovieTitle = styled.p`\n  font-weight: 700;\n  font-size: 25px;\n  text-align: center;\n  max-width: 300px;\n  color: ${({ theme }) => theme.colors.white};\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -10px;\n  right: -10px;\n  width: 50px;\n  height: 25px;\n  border-radius: 30px;\n  border: ${({ theme }) => `1px solid ${theme.colors.white}`};\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.accentGreen};\n  box-shadow: ${({ theme }) => theme.shadows.vote};\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import defaultPoster from 'assets/images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport { Container } from 'components/App/App.styled';\nimport {\n  List,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from '../MoviesList/MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div name=\"moviesList\">\n      <Container>\n        <List>\n          {movies.map(\n            ({\n              id,\n              original_title,\n              poster_path,\n              vote_average,\n              release_date,\n            }) => (\n              <Item key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <Poster\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                        : defaultPoster\n                    }\n                    alt={original_title}\n                  />\n                  <VoteAvr\n                    style={{\n                      backgroundColor: determineReviewColor(\n                        makePercentage(vote_average)\n                      ),\n                    }}\n                  >\n                    {makePercentage(vote_average)}%\n                  </VoteAvr>\n                  <MovieTitle>{original_title}</MovieTitle>\n                  {release_date && (\n                    <MovieRelease>\n                      <CiCalendar />\n                      {release_date}\n                    </MovieRelease>\n                  )}\n                </MovieLink>\n              </Item>\n            )\n          )}\n        </List>\n      </Container>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'service/movies-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport notification from 'helpers/notification';\nimport ScrollUpBtn from 'components/ScrollUpBtn/ScrollUpBtn';\nimport { Container } from 'components/App/App.styled';\n\nconst Home = () => {\n  const [trendings, setTrendings] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    const fetchTrendings = async () => {\n      try {\n        const response = await getTrending();\n\n        setTrendings(response);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchTrendings();\n  }, []);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <Container>\n        <h1 style={{ color: '#fff', marginTop: '30px' }}>\n          Top-20 trending movies\n        </h1>\n      </Container>\n      {trendings.length > 0 && <MoviesList movies={trendings} />}\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","_ref","theme","concat","transitions","linear","Poster","_templateObject3","MovieLink","Link","_templateObject4","MovieTitle","_templateObject5","_ref2","colors","white","VoteAvr","_templateObject6","_ref3","_ref4","_ref5","accentGreen","_ref6","shadows","vote","MovieRelease","_templateObject7","_ref7","movies","location","_jsx","name","children","Container","map","id","original_title","poster_path","vote_average","release_date","_jsxs","to","state","from","src","defaultPoster","alt","style","backgroundColor","determineReviewColor","makePercentage","CiCalendar","ScrollUpButton","greenBackdrop","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","IoIosArrowUp","size","fill","percentage","color","num","Math","ceil","Number","trendings","setTrendings","_useState3","_useState4","loader","setLoader","fetchTrendings","_asyncToGenerator","_regeneratorRuntime","_callee","response","message","_context","prev","next","getTrending","sent","t0","notification","finish","stop","apply","arguments","_Fragment","Loader","marginTop","length","MoviesList","ScrollUpBtn"],"sourceRoot":""}