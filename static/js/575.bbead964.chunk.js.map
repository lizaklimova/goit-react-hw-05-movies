{"version":3,"file":"static/js/575.bbead964.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","components/PaginationList/PaginationList.jsx","pages/Movies.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 60px 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 40px;\n`;\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 350ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n\n  @media screen and (min-width: 428px) {\n    width: 398px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const MovieTitle = styled.p`\n  max-width: 300px;\n  color: #ffffff;\n  font-weight: 700;\n  font-size: 31px;\n\n  @media screen and (min-width: 428px) {\n    max-width: 398px;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 200px;\n    font-size: 21px;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: -20px;\n  right: -5px;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: 1px solid #fff;\n  background-color: #1cb114;\n  font-weight: 600;\n  color: #fff;\n  font-size: 25px;\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n    font-size: 16px;\n  }\n`;\n\nexport const MovieRelease = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: #fff;\n`;\n","import defaultPoster from '../../images/default_poster.jpeg';\nimport { CiCalendar } from 'react-icons/ci';\nimport { Container } from 'components/App/App.styled';\nimport {\n  List,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  VoteAvr,\n  MovieRelease,\n} from '../MoviesList/MoviesList.styled';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <Container>\n      <List name={'movieList'}>\n        {movies.map(\n          ({ id, original_title, poster_path, vote_average, release_date }) => (\n            <Item key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <Poster\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                      : defaultPoster\n                  }\n                  alt={original_title}\n                />\n                <VoteAvr\n                  style={{\n                    backgroundColor: determineReviewColor(\n                      makePercentage(vote_average)\n                    ),\n                  }}\n                >\n                  {makePercentage(vote_average)}%\n                </VoteAvr>\n                <MovieTitle>{original_title}</MovieTitle>\n                {release_date && (\n                  <MovieRelease>\n                    <CiCalendar />\n                    {release_date}\n                  </MovieRelease>\n                )}\n              </MovieLink>\n            </Item>\n          )\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  background-color: #0dcb2d70;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`;\n","import { FaArrowUpLong } from 'react-icons/fa6';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\nimport { useEffect, useState } from 'react';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <FaArrowUpLong size={45} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 60px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 10px;\n  border-radius: 20px;\n  color: #fff;\n  border: 2px solid #fff;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n  }\n  &:focus + label {\n    top: -25%;\n    color: #1cb114;\n  }\n  @media screen and (min-width: 428px) {\n    width: 250px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n\nexport const SearchInputLabel = styled.label`\n  position: absolute;\n  top: 25%;\n  left: 5%;\n  background-color: #000000;\n  color: #ffffff8f;\n  width: 105px;\n  text-align: center;\n  transition: all 150ms linear;\n`;\nexport const SearchBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  background-color: #1cb114;\n  transition: opacity 350ms linear;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n  @media screen and (min-width: 428px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n","import { IoSearchOutline } from 'react-icons/io5';\nimport { Container } from 'components/App/App.styled';\nimport {\n  SearchForm,\n  SearchInput,\n  SearchInputLabel,\n  SearchBtn,\n} from './SearchMovies.styled';\nconst SearchMovies = ({ search }) => {\n  const handleSearch = e => {\n    e.preventDefault();\n\n    search(e.target.search.value);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSearch}>\n        <div style={{ position: 'relative' }}>\n          <SearchInput\n            id=\"search-input\"\n            type=\"text\"\n            name=\"search\"\n            required\n            autoComplete=\"off\"\n          />\n          <SearchInputLabel htmlFor=\"input\">Search movie</SearchInputLabel>\n        </div>\n        <SearchBtn type=\"submit\">\n          <IoSearchOutline stroke=\"#fff\" size={25} />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default SearchMovies;\n","import { Pagination } from '@mui/material';\nimport { Container } from 'components/App/App.styled';\n\nconst PaginationList = ({ pageQty, pg, onChange }) => {\n  return (\n    <Container>\n      <Pagination\n        count={pageQty}\n        page={pg}\n        onChange={(_, num) => {\n          onChange(num);\n        }}\n        color={'success'}\n        sx={{\n          color: '#fff',\n          stroke: '#fff',\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px',\n\n          '& .MuiPaginationItem-root': {\n            color: '#fff',\n          },\n          '& .MuiPaginationItem-page': {\n            '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n              {\n                color: '#1cb114',\n              },\n          },\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default PaginationList;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovies from 'components/SearchMovies/SearchMovies';\nimport { getMoviesBySearch } from 'service/movies-api';\nimport notification from 'helpers/notification';\nimport PaginationList from 'components/PaginationList/PaginationList';\nimport ScrollUpBtn from 'components/ScrollUpBtn/ScrollUpBtn';\nimport smoothScroll from 'helpers/smoothScroll';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoader(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await getMoviesBySearch(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n\n        smoothScroll('movieList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <SearchMovies search={handleSearch} />\n\n      {pageQty > 1 && (\n        <PaginationList pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n\n      <ScrollUpBtn />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Poster","_templateObject3","MovieLink","Link","_templateObject4","MovieTitle","_templateObject5","VoteAvr","_templateObject6","MovieRelease","_templateObject7","_ref","movies","location","_jsx","Container","children","name","map","_ref2","id","original_title","poster_path","vote_average","release_date","_jsxs","to","concat","state","from","src","defaultPoster","alt","style","backgroundColor","determineReviewColor","makePercentage","CiCalendar","ScrollUpButton","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","display","FaArrowUpLong","size","fill","percentage","color","num","Math","ceil","Number","SearchForm","SearchInput","SearchInputLabel","SearchBtn","search","onSubmit","e","preventDefault","target","value","currentTarget","reset","position","type","required","autoComplete","htmlFor","IoSearchOutline","stroke","pageQty","pg","onChange","Pagination","count","page","_","sx","justifyContent","marginTop","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useLocation","setMovies","_useState3","_useState4","loader","setLoader","_useState5","_useState6","setPg","_useState7","_useState8","setPageQty","queryForSearch","get","fetchMoviesBySearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMoviesBySea","results","total_pages","message","_context","prev","next","getMoviesBySearch","sent","query","length","abrupt","notification","t0","smoothScroll","finish","stop","apply","arguments","_Fragment","Loader","SearchMovies","PaginationList","MoviesList","ScrollUpBtn"],"sourceRoot":""}