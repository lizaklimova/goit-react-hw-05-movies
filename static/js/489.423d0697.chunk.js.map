{"version":3,"file":"static/js/489.423d0697.chunk.js","mappings":"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","sources":["components/ScrollUpBtn/ScrollUpBtn.styled.jsx","components/ScrollUpBtn/ScrollUpBtn.jsx","helpers/determineReviewColor.js","helpers/makePercentage.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/GoBackBtn/GoBackBtn.styled.jsx","components/GoBackBtn/GoBackBtn.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  width: 70px;\n  height: 70px;\n  border: ${({ theme }) => `3px solid ${theme.colors.white}`};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.greenBackdrop};\n  cursor: pointer;\n  transition: ${({ theme }) => `transform ${theme.transitions.linear}`};\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 90px;\n    height: 90px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { IoIosArrowUp } from 'react-icons/io';\nimport { ScrollUpButton } from './ScrollUpBtn.styled';\n\nconst ScrollUpBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollPosition = window.scrollY;\n\n      if (scrollPosition > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <ScrollUpButton\n      onClick={scrollToTop}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    >\n      <IoIosArrowUp size={55} fill=\"#fff\" />\n    </ScrollUpButton>\n  );\n};\n\nexport default ScrollUpBtn;\n","const determineReviewColor = percentage => {\n  let color = '';\n  switch (true) {\n    case percentage >= 70:\n      color = '#1cb114';\n      break;\n    case percentage > 30:\n      color = '#c3c737';\n      break;\n    case percentage === 0:\n      color = '#64645b';\n      break;\n    default:\n      color = '#cd1313';\n  }\n  return color;\n};\nexport default determineReviewColor;\n","const makePercentage = num => {\n  return Math.ceil(Number(num) * 10);\n};\nexport default makePercentage;\n","import { styled } from 'styled-components';\n\nexport const MovieInfoContainer = styled.div`\n  padding: 60px 0;\n  min-height: 500px;\n`;\n\nexport const InfoSectionWrapper = styled.div`\n  position: relative;\n  min-height: 500px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(rgba(4, 4, 4, 0.4), rgba(4, 4, 4, 0.4))\n        no-repeat center/cover,\n      url(${props => props.$backdropSrc}) no-repeat center/cover;\n    filter: blur(15px);\n    z-index: -1;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 50px;\n  }\n`;\n\nexport const MovieInfoPoster = styled.img`\n  width: 100%;\n  border-radius: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nexport const MovieDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  min-height: 315px;\n  border-radius: 20px;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.grey};\n  backdrop-filter: blur(15px);\n`;\n\nexport const MovieInfoTitle = styled.h3`\n  font-size: 25px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 40px;\n  }\n`;\n\nexport const ScoreText = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const MovieInfoScore = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nexport const SubTitle = styled.h4`\n  font-size: 20px;\n  font-style: italic;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nexport const Line = styled.hr`\n  width: 100%;\n  border-color: ${({ theme }) => theme.colors.black};\n`;\n\nexport const TrailerWrap = styled.div`\n  width: 100%;\n  height: 300px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n\n  iframe {\n    border: none;\n    border-radius: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 500px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 900px;\n  }\n`;\n","import defaultPoster from 'assets/images/default_poster.jpeg';\nimport makePercentage from 'helpers/makePercentage';\nimport determineReviewColor from 'helpers/determineReviewColor';\nimport { Container } from 'components/App/App.styled';\nimport {\n  MovieInfoContainer,\n  InfoSectionWrapper,\n  Info,\n  MovieInfoPoster,\n  MovieDescription,\n  MovieInfoTitle,\n  Line,\n  ScoreText,\n  MovieInfoScore,\n  SubTitle,\n  GenresList,\n  TrailerWrap,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({\n  movie: {\n    backdrop_path,\n    original_title,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  },\n  trailer,\n}) => {\n  const posterUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const posterSrc = poster_path ? posterUrl : defaultPoster;\n\n  const backdropUrl = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n  const backdropSrc = backdrop_path ? backdropUrl : defaultPoster;\n\n  return (\n    <Container>\n      <MovieInfoContainer>\n        <InfoSectionWrapper $backdropSrc={backdropSrc}>\n          <Info>\n            <MovieInfoPoster src={posterSrc} alt=\"original_title\" />\n            <MovieDescription>\n              <MovieInfoTitle>{original_title}</MovieInfoTitle>\n              <Line />\n              <ScoreText>\n                User score:\n                <MovieInfoScore\n                  color={determineReviewColor(makePercentage(vote_average))}\n                >\n                  {makePercentage(vote_average)}%\n                </MovieInfoScore>\n              </ScoreText>\n\n              <SubTitle>Overview</SubTitle>\n              <p>{overview}</p>\n\n              {genres.length > 0 && (\n                <>\n                  <SubTitle>Genres</SubTitle>\n                  <GenresList>\n                    {genres.map(genre => (\n                      <p key={genre.id}>{genre.name}</p>\n                    ))}\n                  </GenresList>\n                </>\n              )}\n            </MovieDescription>\n          </Info>\n        </InfoSectionWrapper>\n      </MovieInfoContainer>\n      {trailer && (\n        <TrailerWrap>\n          <iframe\n            width=\"100%\"\n            height=\"100%\"\n            src={`https://www.youtube.com/embed/${trailer}`}\n            title=\"YouTube video player\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; \"\n            allowFullScreen\n          ></iframe>\n        </TrailerWrap>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  width: 100px;\n  border: ${({ theme }) => `2px solid ${theme.colors.white}`};\n  border-radius: 20px;\n  padding: 5px;\n  margin-top: 30px;\n  color: ${({ theme }) => theme.colors.white};\n  transition: ${({ theme }) =>\n    `color ${theme.transitions.linear}, border-color ${theme.transitions.linear} `};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.accentGreen};\n    border-color: ${({ theme }) => theme.colors.accentGreen};\n  }\n`;\n","import { FaArrowLeftLong } from 'react-icons/fa6';\nimport { Container } from 'components/App/App.styled';\nimport { GoBackLink } from './GoBackBtn.styled';\n\nconst GoBackBtn = ({ path }) => {\n  return (\n    <Container>\n      <GoBackLink to={path}>\n        <FaArrowLeftLong />\n        Go back\n      </GoBackLink>\n    </Container>\n  );\n};\n\nexport default GoBackBtn;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport GoBackBtn from 'components/GoBackBtn/GoBackBtn';\nimport ScrollUpBtn from 'components/ScrollUpBtn/ScrollUpBtn';\nimport notification from 'helpers/notification';\nimport { getMovieById, getTrailer } from 'service/movies-api';\nimport { Container, AdLinksWrap, AdLink } from 'components/App/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [trailerUrl, setTrailerUrl] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    setLoader(true);\n\n    const fetchMovieById = async () => {\n      try {\n        const movie = await getMovieById(movieId);\n        const trailer = await getTrailer(movieId);\n\n        !trailer ? setTrailerUrl(null) : setTrailerUrl(trailer.key);\n        setMovieInfo(movie);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchMovieById();\n  }, [movieId]);\n\n  const goBackPath = location?.state?.from ?? '/';\n\n  return (\n    <Container>\n      {loader && <Loader />}\n      <GoBackBtn path={goBackPath} />\n      {movieInfo && <MovieInfo movie={movieInfo} trailer={trailerUrl} />}\n      <AdLinksWrap>\n        <AdLink to=\"cast\">Cast</AdLink>\n        <AdLink to=\"reviews\">Reviews</AdLink>\n      </AdLinksWrap>\n      <ScrollUpBtn />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["ScrollUpButton","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","concat","colors","white","_ref2","greenBackdrop","_ref3","transitions","linear","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","_jsx","onClick","scrollTo","top","behavior","style","display","children","IoIosArrowUp","size","fill","percentage","color","num","Math","ceil","Number","MovieInfoContainer","InfoSectionWrapper","_templateObject2","props","$backdropSrc","Info","_templateObject3","MovieInfoPoster","_templateObject4","MovieDescription","_templateObject5","grey","MovieInfoTitle","_templateObject6","ScoreText","_templateObject7","MovieInfoScore","_templateObject8","SubTitle","_templateObject9","GenresList","_templateObject10","Line","_templateObject11","black","TrailerWrap","_templateObject12","_ref$movie","movie","backdrop_path","original_title","poster_path","vote_average","overview","genres","trailer","posterUrl","posterSrc","defaultPoster","backdropUrl","backdropSrc","_jsxs","Container","src","alt","determineReviewColor","makePercentage","length","_Fragment","map","genre","name","id","width","height","title","allow","allowFullScreen","GoBackLink","Link","_ref4","accentGreen","_ref5","path","to","FaArrowLeftLong","_location$state$from","_location$state","movieId","useParams","location","useLocation","movieInfo","setMovieInfo","_useState3","_useState4","trailerUrl","setTrailerUrl","_useState5","_useState6","loader","setLoader","fetchMovieById","_asyncToGenerator","_regeneratorRuntime","_callee","message","_context","prev","next","getMovieById","sent","getTrailer","key","t0","notification","finish","stop","apply","arguments","goBackPath","state","from","Loader","GoBackBtn","MovieInfo","AdLinksWrap","AdLink","ScrollUpBtn","Suspense","fallback","Outlet"],"sourceRoot":""}